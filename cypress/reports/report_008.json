{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-24T11:12:36.821Z",
    "end": "2021-03-24T11:13:03.678Z",
    "duration": 26857,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "65a83c4d-e35d-4756-852c-4d8901109eac",
      "title": "",
      "fullFile": "cypress\\integration\\swaglabs.test\\product.spec.js",
      "file": "cypress\\integration\\swaglabs.test\\product.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "436d0011-4f6f-423d-aec1-c7753ef8fdb9",
          "title": "SWAGLABS",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Products",
              "fullTitle": "SWAGLABS Verify Products",
              "timedOut": null,
              "duration": 19208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _this = this;\n//Verify Filters\nproduct.dropdown().select('Name (A to Z)').should('have.value', 'az');\nproduct.dropdown().select('Name (Z to A)').should('have.value', 'za');\nvar allproducts = [];\nvar sortedProducts = this.data.productsZA;\nproduct.itemNames().each(function ($e1, index, $list) {\n  for (var i = index; i <= index; i++) {\n    allproducts[i] = $e1.text();\n  }\n}).then(function () {\n  allproducts.sort();\n  allproducts.reverse();\n  expect(sortedProducts).to.deep.equal(allproducts);\n});\nproduct.dropdown().select('Price (low to high)').should('have.value', 'lohi');\nvar allprices = [];\nvar sortedprices = this.data.priceLH;\nproduct.itemPrice().each(function ($e1, index, $list) {\n  for (var i = index; i <= index; i++) {\n    allprices[i] = $e1.text();\n  }\n}).then(function () {\n  expect(sortedprices).to.deep.equal(allprices);\n});\nproduct.dropdown().select('Price (high to low)').should('have.value', 'hilo'); // Backpack price\nvar productPrice;\nvar pPrice;\nproduct.itemPrice().then(function ($price) {\n  productPrice = $price.eq('1').text();\n  pPrice = productPrice.replace(\"$29.99\", \"29.99\");\n}); // Select products and add into the cart\nproduct.itemNames().should('have.length', 6).and('be.visible').each(function ($items, index, $list) {\n  var itemName = $items.text();\n  _this.data.productName.forEach(function (el) {\n    if (itemName.includes(el)) {\n      product.addToCart().eq(index).click();\n    }\n  });\n}); // Verify added products into the cart\nproduct.addedProducts().then(function ($num) {\n  var addedProduct = $num.text();\n  var i;\n  for (i = 0; i <= 6; i++) {\n    if (i == addedProduct) {\n      expect(parseInt(addedProduct)).to.be.equal(i);\n    }\n  }\n}); // Cart button\nproduct.cart().should('be.visible').click(); // Verify product price\nvar cartPrice;\nproduct.itemPrice().then(function ($cprice) {\n  cartPrice = $cprice.eq('0').text();\n  expect(cartPrice).to.be.equal(pPrice);\n}); // Remove product from the cart\nproduct.cartItems().each(function ($cartlist, index, $list) {\n  var cartItems = $cartlist.text();\n  if (cartItems.includes('Sauce Labs Backpack')) {\n    product.removeCart();\n  }\n});",
              "err": {},
              "uuid": "849780fe-0a7b-48a5-9dc0-8e0c7fef94ae",
              "parentUUID": "436d0011-4f6f-423d-aec1-c7753ef8fdb9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "849780fe-0a7b-48a5-9dc0-8e0c7fef94ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19208,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "overwrite": false,
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "5.2.0"
    }
  }
}